{
    "story": [
        {
            "number": "0",
            "comment": "これから，上の画面に表示されているターミナルに，gitコマンドを入力して進めていくチュートリアルを始めてもらいます。\n画面左上のフォームへの学生証番号の入力が完了したら，ターミナルに'git init'と入力し，フォルダ内にリポジトリを作ってください。"

        },
        {
            "number": "1",
            "comment": "フォルダの中にリポジトリが作成されました。次にバージョン管理を行うためのファイルを作成します。\nターミナルに'create'コマンドを入力して，README.mdファイルを作成しましょう。",
            "status": "Untracked:"
        },
        {
            "number": "2",
            "comment": "フォルダの中にREADME.mdというファイルが作成されました。\n次にREADME.mdをインデックスと呼ばれるファイルをバージョン管理対象にするための場所に登録しましょう。\n'git add ファイル名'で登録できます",
            "status": "new file:"
        },
        {
            "number": "3",
            "comment": "インデックスにREADME.mdが登録されました。\nインデックスに追加したファイルをリポジトリに保存するため,git commit -m '編集したメッセージ'と入力して見ましょう。\n-mというメッセージオプションをつけると，フォルダ内での変更内容を記入できます\n",
            "status": ""
        },
        {
            "number": "4",
            "comment": "リポジトリに変更内容が保存されました。次に'edit'コマンドを使ってREADME.mdファイルの内容を変更しましょう。\n次はあなた自身でcommitまで完了してみましょう。\n'help','git help'コマンドを使うと，このターミナルで使えるコマンドが確認できます。",
            "status": ""
        },
        {
            "number": "5",
            "comment": "編集したファイルの変更内容が保存されました。次はrmコマンドを使って，README.mdファイルを削除しましょう\n先ほどと同じようにあなた自身でcommitまで進めてみてください。",
            "status": ""
        },
        {
            "number": "6",
            "comment": "ファイルを削除したという変更内容が保存されました。\nこれでファイルの追加，編集，削除をした時のそれぞれのバージョン管理をする方法を学べたと思います。\n次にターミナル右上にある確認テストをクリックして，チュートリアルの復習をしてみましょう"
        }
    ],
    "file":"README.md"
}